const canvas = document.getElementById("matrixCanvas"); // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ HTML-—ç–ª–µ–º–µ–Ω—Ç canvas
const ctx = canvas.getContext("2d"); // –ü–æ–ª—É—á–∞–µ–º 2D-–∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä canvas –ø–æ —à–∏—Ä–∏–Ω–µ –∏ –≤—ã—Å–æ—Ç–µ –æ–∫–Ω–∞
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const columns = canvas.width / 20; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –∞–Ω–∏–º–∞—Ü–∏–∏ "–ú–∞—Ç—Ä–∏—Ü—ã"
const drops = Array(Math.floor(columns)).fill(1); // –ú–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤
const chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; // –ù–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ "–ú–∞—Ç—Ä–∏—Ü—ã"

function drawMatrix() {
    ctx.fillStyle = "rgba(0, 0, 0, 0.05)"; // –õ–µ–≥–∫–∏–π —á–µ—Ä–Ω—ã–π —Ñ–æ–Ω —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    ctx.fillStyle = "cyan"; // –¶–≤–µ—Ç —Å–∏–º–≤–æ–ª–æ–≤
    ctx.font = "16px 'Share Tech Mono'"; // –®—Ä–∏—Ñ—Ç —Å–∏–º–≤–æ–ª–æ–≤

    for (let i = 0; i < drops.length; i++) {
        const text = chars[Math.floor(Math.random() * chars.length)]; // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å–∏–º–≤–æ–ª
        ctx.fillText(text, i * 20, drops[i] * 20); // –†–∏—Å—É–µ–º —Å–∏–º–≤–æ–ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–ª–æ–Ω–∫–µ

        // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ —ç–∫—Ä–∞–Ω–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
        if (drops[i] * 20 > canvas.height && Math.random() > 0.975) {
            drops[i] = 0;
        }
        drops[i]++;
    }
}

setInterval(drawMatrix, 50); // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 50 –º—Å

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã canvas
window.addEventListener("resize", () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
});

// üìå ‚ùó –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –µ–≥–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:
// bandChannels –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ. –ï—Å–ª–∏ –æ–Ω –Ω–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.
const bandChannels = {
    "A": [1, 2, 3, 4, 5, 6, 7, 8],
    "B": [1, 2, 3, 4, 5, 6, 7, 8],
    "E": [1, 2, 3, 4, 5, 6, 7, 8],
    "F": [1, 2, 3, 4, 5, 6, 7, 8],
    "R": [1, 2, 3, 4, 5, 6, 7, 8],
    "L": [1, 2, 3, 4, 5, 6, 7, 8]
};

function updateChannels() {
    const bandSelect = document.getElementById("bandSelect");
    const channelSelect = document.getElementById("channelSelect");
    channelSelect.innerHTML = "";
    if (bandSelect.value === "") {
        channelSelect.disabled = true;
        channelSelect.innerHTML = "<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –±–µ–Ω–¥</option>";
    } else {
        channelSelect.disabled = false;
        bandChannels[bandSelect.value].forEach(channel => {
            const option = document.createElement("option");
            option.value = channel;
            option.textContent = `Channel ${channel}`;
            channelSelect.appendChild(option);
        });
    }
}
